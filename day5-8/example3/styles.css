/*
下面的例子使用了与 flex 例子类似的 HTML 标记，描述了一个容器和若干子元素。除了使用 display:grid，我们还分别使用 grid-template-rows 和 grid-template-columns 两个属性定义了一些行和列的轨道。定义了三个 1fr 的列，还有两个 100px 的行之后，无需再在子元素上指定任何规则，它们自动地排列到了我们创建的格子当中。
*/
.wrapper3 {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 100px 100px;
    grid-gap: 10px;
}

/*

*/
.wrapper4 {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 100px 100px;
    grid-gap: 10px;
}

.box11 {
    grid-column: 2 / 4;
    grid-row: 1;
}

.box22 {
    grid-column: 1;
    grid-row: 1 / 3;
}

.box33 {
    grid-row: 2;
    grid-column: 3;
}


/* 匹配带有一个名为 class 的属性的元素，其值开头为 box 子字符串。 */
div[class^="box"] {
    background-color: green;
    border-radius: 5px;
    padding-bottom: 10px;
    padding-top: 10px;
    margin: 10px;
}